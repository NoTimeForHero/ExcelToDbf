<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>